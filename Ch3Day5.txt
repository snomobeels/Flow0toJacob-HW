
publicFunc - can call from anywhere
contractFunc - only current, inner, and containing contract (so within the contract SomeContract) 
privateFunc - current and inner (so either current level or a within another function at that level [not sure about the last part?])

-----------------
access(all) contract SomeContract {
    pub var testStruct: SomeStruct

    pub struct SomeStruct {

        //
        // 4 Variables
        //

        pub(set) var a: String

        pub var b: String

        access(contract) var c: String

        access(self) var d: String

        //
        // 3 Functions
        //

        pub fun publicFunc() {}

        access(contract) fun contractFunc() {}

        access(self) fun privateFunc() {}


        pub fun structFunc() {
            /**************/
            /*** AREA 1 ***/
            /**************/
	a - read and write
	b - read and write 
	c - read and write
	d - read and write



        }

        init() {
            self.a = "a"
            self.b = "b"
            self.c = "c"
            self.d = "d"
        }
    }

    pub resource SomeResource {
        pub var e: Int

        pub fun resourceFunc() {
            /**************/
            /*** AREA 2 ***/
            /**************/
	a - read and write
	b - read
	c - read
	d - none
	

        }

        init() {
            self.e = 17
        }
    }

    pub fun createSomeResource(): @SomeResource {
        return <- create SomeResource()
    }

    pub fun questsAreFun() {
        /**************/
        /*** AREA 3 ****/
        /**************/
	a - read and write
	b - read
	c - read
	d - none

    }

    init() {
        self.testStruct = SomeStruct()
    }
}



import SomeContract from 0x01

pub fun main() {
  /**************/
  /*** AREA 4 ***/
  /**************/
a - read and write
b - read
c - none
d - none

}